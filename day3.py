import turtle
t = turtle.Turtle()

t.pensize(2)

#screen = trtle.Screen()
t.speed(0)
t.pensize(0)
screen = turtle.Screen()
screen.setup(width = 640, height = 640)

# color constants
BLUE = "blue" #sonics hair
AQUA = "aqua" #sonics outline
BROWN = "brown"
TAN =  "tan" #General skin color
GREEN # Eyes
CYAN # that light teal color
ORANGE # that darker orange
PEACH # that darker tan thingy
RED # that color that looks most like red
MAROON # that darkest reddish color
VERMILLION # that really bright orange
SAND # the lightish color
GRAY # the grayish-blusish color
WHITE # background

PIXEL_SIZE = 20
PIXELARRAY = [
    
    # part 1
    [WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, AQUA, AQUA, BLUE, AQUA, AQUA, AQUA, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, AQUA, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE], #
    [WHITE, WHITE, WHITE, WHITE, WHITE, WHITE,WHITE, WHITE, WHITE, AQUA, AQUA, BLUE, BLUE, BLUE, BLUE, AQUA, BLUE, BLUE, BROWN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BROWN, WHITE, WHITE, WHITE, WHITE], #
    [AQUA, AQUA, AQUA, AQUA, AQUA, WHITE, WHITE, WHITE, AQUA, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, BLUE, BLUE, BLUE, BROWN, BLUE, BLUE, AQUA, AQUA, AQUA, BROWN, BROWN, BROWN, WHITE, WHITE, WHITE, WHITE, WHITE], #
    [BROWN, BLUE, BLUE, BLUE, BLUE, AQUA, AQUA, AQUA, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, BLUE, BLUE, TAN, BLUE, BLUE, BROWN, AQUA, AQUA, AQUA, BROWN, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE], #
    [BROWN, TAN, BLUE, BLUE, BLUE, BLUE, AQUA, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, BLUE, TAN, TAN, TAN, BLUE, BROWN, AQUA, AQUA, BROWN, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE], #
    [BROWN, TAN, TAN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, AQUA, AQUA, AQUA, AQUA, TAN, TAN, BLUE, BLUE, BROWN, BROWN, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE], #
    [BROWN, TAN, TAN, TAN, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, TAN, BLUE, BLUE, BROWN, BLUE, AQUA, AQUA, AQUA, WHITE, WHITE WHITE, WHITE, WHITE, WHITE, WHITE], #
    [BROWN, TAN, AQUA, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, AQUA, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE], #


    [WHITE, WHITE, BROWN, BROWN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, AQUA, AQUA, AQUA, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BROWN, WHITE, WHITE,WHITE,WHITE],
    [WHITE, WHITE,WHITE, BROWN, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BROWN, WHITE, WHITE, WHITE, CYAN, AQUA, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, AQUA, AQUA, AQUA, AQUA, BROWN, WHITE, WHITE, WHITE],
    [WHITE, WHITE, AQUA, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BLUE, BROWN, AQUA, WHITE, GREEN, WHITE, WHITE, CYAN, AQUA, BLUE, BLUE, BLUE, BLUE, AQUA,AQUA,AQUA,AQUA,AQUA,AQUA,AQUA, BROWN, WHITE, WHITE],
    [WHITE, WHITE, AQUA, BLUE, AQUA, AQUA, BLUE, BLUE, BLUE, BLUE, BROWN, WHITE, WHITE, GREEN, BROWN, WHITE, WHITE, AQUA, BLUE, BLUE, BLUE, AQUA,AQUA, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, WHITE, WHITE],
    [WHITE, WHITE, AQUA, BLUE, AQUA, CYAN, AQUA, BLUE, BLUE, BROWN, AQUA, WHITE, WHITE, GREEN, BROWN, WHITE, WHITE, AQUA, BLUE, BLUE, AQUA, BROWN, BROWN, BROWN, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE],
    [WHITE, WHITE, WHITE, BROWN, BROWN, CYAN, CYAN, BROWN, BLUE, BROWN, WHITE, WHITE, WHITE, WHITE, BROWN, WHITE, PEACH, AQUA, AQUA, BLUE, BLUE, BLUE, AQUA, BROWN, BROWN, WHITE, AQUA, AQUA, WHITE, WHITE, WHITE, WHITE, WHITE],
    [WHITE, WHITE, WHITE, WHITE, BROWN, WHITE, AQUA, BROWN, BROWN, BROWN, WHITE, WHITE, WHITE, WHITE, WHITE, PEACH, TAN, TAN, TAN, BROWN, BLUE, BLUE, BLUE, AQUA, AQUA, BROWN, WHITE, WHITE, AQUA, WHITE, WHITE, WHITE, WHITE],
    [WHITE, WHITE, WHITE, WHITE, BROWN, WHITE, AQUA, AQUA, BROWN, WHITE, WHITE, WHITE, WHITE, WHITE, PEACH, TAN, TAN, TAN, TAN, BROWN, AQUA, AQUA, AQUA, AQUA, BROWN, WHITE, WHITE, WHITE, CYAN, CYAN, CYAN, CYAN, WHITE, WHITE],
    
    [WHITE, WHITE, WHITE, WHITE, WHITE, BROWN, BROWN, BROWN, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE, TAN, TAN, ORANGE, ORANGE, TAN, TAN, BROWN, AQUA, BROWN, BROWN, BROWN, SAND, SAND, AQUA, AQUA, SAND, SAND, SAND, AQUA], #
    [WHITE, WHITE, WHITE, WHITE, WHITE, BROWN, BROWN, BROWN, BROWN, TAN, TAN, TAN, TAN, TAN, TAN, TAN, TAN, PEACH, BROWN, AQUA, BROWN, SAND, SAND, SAND, SAND, CYAN, CYAN, SAND, SAND, SAND, SAND, AQUA], #
    [WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, RED, RED, TAN, TAN, TAN, TAN, TAN, PEACH, BROWN, BROWN, AQUA, AQUA, BROWN, CYAN, CYAN, CYAN, CYAN, CYAN, CYAN, CYAN, CYAN, AQUA, AQUA, WHITE], #
    [WHITE, WHITE, WHITE, WHITE, MAROON, MAROON, MAROON, MAROON, WHITE, WHITE, RED, RED, RED, BROWN, BROWN, BROWN, PEACH, AQUA, AQUA, AQUA, AQUA, BROWN, BROWN, BROWN, CYAN, CYAN, GRAY, GRAY, CYAN, CYAN, CYAN, AQUA], #
    [WHITE, WHITE, WHITE, AQUA, CYAN, SAND, SAND, VERMILLION, MAROON, MAROON, WHITE, WHITE, WHITE, RED, PEACH, PEACH, PEACH, PEACH, AQUA, AQUA, AQUA, AQUA, BROWN, BROWN, CYAN, CYAN, CYAN, CYAN, GRAY, GRAY, CYAN, CYAN, AQUA], #
    [WHITE, WHITE, WHITE, AQUA, AQUA, AQUA, AQUA, SAND, VERMILLION, VERMILLION, MAROON, WHITE, WHITE, RED, TAN, PEACH, PEACH, PEACH, AQUA, AQUA, BROWN, AQUA, AQUA, BROWN, CYAN, CYAN, CYAN, GRAY, BROWN, BROWN, BROWN, WHITE], #
    [WHITE, WHITE, WHITE, AQUA, GRAY, GRAY, GRAY, AQUA, SAND, CYAN, CYAN, MAROON, WHITE, RED, ORANGE, TAN, TAN, PEACH, AQUA, AQUA, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, WHITE, WHITE, WHITE, WHITE], #
    [WHITE, WHITE, WHITE, AQUA, GRAY, GRAY, GRAY, GRAY, AQUA, SAND, CYAN, CYAN, MAROON, WHITE, BROWN, TAN, TAN, TAN, AQUA, BLUE, BLUE, BROWN, BROWN, SAND, SAND, AQUA, VERMILLION, MAROON, WHITE, WHITE, WHITE, WHITE] #
    
]


def draw_pixel(x,y,color):
    t.penup()

    t.goto(x,y)

    t.pendown()

    t.fillcolor(color)
    t.begin_fill()

    for _ in range(4):
        t.forward(20)
        t.right(90)             

    t.end_fill()
    

for x in range(32):
    for y in range(32):
        draw_pixel(-320+PIXEL_SIZE*y,320-PIXEL_SIZE*x,PIXELARRAY[x][y])


